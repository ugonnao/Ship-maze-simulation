=================================================================
==1307==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x000102201e28 at pc 0x000100027368 bp 0x00016fdfebb0 sp 0x00016fdfeba8
READ of size 8 at 0x000102201e28 thread T0
    #0 0x100027364 in std::__1::vector<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> >, std::__1::allocator<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> > > >::operator[](unsigned long) vector:1572
    #1 0x1000164c0 in Ship::map_mode() ship.cpp:65
    #2 0x100003200 in Ship::read_input() ship.cpp:236
    #3 0x100002050 in main ship.cpp:404
    #4 0x10009d0f0 in start+0x204 (dyld:arm64e+0x50f0)

0x000102201e28 is located 0 bytes to the right of 24-byte region [0x000102201e10,0x000102201e28)
allocated by thread T0 here:
    #0 0x1005b0bd8 in wrap__Znwm+0x74 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x4cbd8)
    #1 0x10001c978 in void* std::__1::__libcpp_operator_new<unsigned long>(unsigned long) new:235
    #2 0x10001c768 in std::__1::__libcpp_allocate(unsigned long, unsigned long) new:261
    #3 0x100022d64 in std::__1::allocator<std::__1::vector<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> >, std::__1::allocator<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> > > > >::allocate(unsigned long) allocator.h:108
    #4 0x10002280c in std::__1::allocator_traits<std::__1::allocator<std::__1::vector<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> >, std::__1::allocator<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> > > > > >::allocate(std::__1::allocator<std::__1::vector<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> >, std::__1::allocator<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> > > > >&, unsigned long) allocator_traits.h:262
    #5 0x10002240c in std::__1::__split_buffer<std::__1::vector<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> >, std::__1::allocator<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> >, std::__1::allocator<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> > > > >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::vector<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> >, std::__1::allocator<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> > > > >&) __split_buffer:315
    #6 0x100018ba0 in std::__1::__split_buffer<std::__1::vector<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> >, std::__1::allocator<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> >, std::__1::allocator<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> > > > >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::vector<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> >, std::__1::allocator<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> > > > >&) __split_buffer:314
    #7 0x100017e20 in std::__1::vector<std::__1::vector<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> >, std::__1::allocator<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> >, std::__1::allocator<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> > > > > >::__append(unsigned long, std::__1::vector<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> >, std::__1::allocator<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> > > > const&) vector:1134
    #8 0x100014774 in std::__1::vector<std::__1::vector<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> >, std::__1::allocator<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> >, std::__1::allocator<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> > > > > >::resize(unsigned long, std::__1::vector<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> >, std::__1::allocator<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> > > > const&) vector:2057
    #9 0x100003090 in Ship::read_input() ship.cpp:231
    #10 0x100002050 in main ship.cpp:404
    #11 0x10009d0f0 in start+0x204 (dyld:arm64e+0x50f0)

SUMMARY: AddressSanitizer: heap-buffer-overflow vector:1572 in std::__1::vector<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> >, std::__1::allocator<std::__1::vector<Ship::Discover, std::__1::allocator<Ship::Discover> > > >::operator[](unsigned long)
Shadow bytes around the buggy address:
  0x007020460370: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020460380: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020460390: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0070204603a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0070204603b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x0070204603c0: fa fa 00 00 00[fa]fa fa 00 00 00 00 fa fa 00 00
  0x0070204603d0: 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa
  0x0070204603e0: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
  0x0070204603f0: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
  0x007020460400: 00 00 fa fa fd fd fd fa fa fa 00 00 00 00 fa fa
  0x007020460410: 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==1307==ABORTING
 overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==44196==ABORTING
